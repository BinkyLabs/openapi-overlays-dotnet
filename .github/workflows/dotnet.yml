name: Build, test and publish dotnet
on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  dotnet-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v5
      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 9.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Check formatting
        run: dotnet format --verify-no-changes
      - name: Build
        run: dotnet build --no-restore --configuration Release
      - name: Test
        run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --configuration Release
      - name: Install report generator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool
      - name: Pack the project
        run: dotnet pack --configuration Release
      - name: Generate coverage report
        run: reportgenerator -reporttypes:MarkdownSummary -reports:**/coverage.cobertura.xml -targetdir:./reports/coverage
      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: reports/coverage
      - uses: actions/upload-artifact@v4
        with:
          name: packages
          path: src/*/bin/Release/*.*nupkg
      - name:  Publish coverage report to GitHub Step Summary
        run: |
           cat reports/coverage/Summary.md >>  $GITHUB_STEP_SUMMARY
  
  publish-release-to-nuget:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: dotnet-build
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 9.x
      - name: Download packages
        uses: actions/download-artifact@v6
        with:
          name: packages
      - name: NuGet login
        uses: NuGet/login@v1
        id: nuget-login
        with:
          user: ${{ secrets.NUGET_USER }}
      - name: Publish to NuGet
        run: dotnet nuget push **/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ steps.nuget-login.outputs.NUGET_API_KEY }}
      - name: Publish to GitHub Packages
        run: gh release upload ${{ github.ref_name }} lib/bin/Release/*.nupkg lib/bin/Release/*.snupkg tool/bin/Release/*.nupkg tool/bin/Release/*.snupkg --repo ${{ github.repository }} --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}